{"version":3,"file":"static/js/main.46c8e3a6.js","mappings":"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","sources":["SplashScreen.tsx","HomeScreen.tsx","TheoreticalGuide.tsx","ExperimentationScreen.tsx","MissionsScreen.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\ninterface SplashScreenProps {\r\n  onGetStarted: () => void;\r\n}\r\n\r\nconst SplashScreen: React.FC<SplashScreenProps> = ({ onGetStarted }) => {\r\n  return (\r\n    <div className=\"splash-screen\">\r\n      <div className=\"splash-content\">\r\n        <h1>Laborator electroliza</h1>\r\n        <p>Simulare experimente de electroliză</p>\r\n        <button onClick={onGetStarted}>Să incepem</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\ninterface HomeScreenProps {\r\n  onSelectMode: (mode: 'experiment') => void;\r\n}\r\n\r\nconst HomeScreen: React.FC<HomeScreenProps> = ({ onSelectMode }) => {\r\n  return (\r\n    <div className=\"home-screen\">\r\n      <header className=\"home-header\">\r\n        <h1> Electroliza </h1>\r\n      </header>\r\n      <div className=\"mode-selection\">\r\n        <button className=\"mode-button\" onClick={() => onSelectMode('experiment')}>\r\n          Deschide Experimentarea\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\n\r\ninterface TheoreticalGuideProps {\r\n  onClose: () => void;\r\n}\r\n\r\nconst TheoreticalGuide: React.FC<TheoreticalGuideProps> = ({ onClose }) => {\r\n  return (\r\n    <View style={styles.modal}>\r\n      <View style={styles.content}>\r\n        <Button title=\"Închide\" onPress={onClose} color=\"#007BFF\" />\r\n        <Text style={styles.header}>Ghid Teoretic</Text>\r\n        \r\n        <Text style={styles.sectionHeader}>Electroliza Apei</Text>\r\n        <Text style={styles.text}>\r\n          Electroliza apei implică descompunerea acesteia în hidrogen și oxigen prin aplicarea unui curent electric.\r\n          Reacția principală este: {\"\\n\"}2H₂O(l) → 2H₂(g) + O₂(g)\r\n        </Text>\r\n        \r\n        <Text style={styles.sectionHeader}>Puntea de Sare</Text>\r\n        <Text style={styles.text}>\r\n          Puntea de sare permite migrarea ionilor (Na⁺ și Cl⁻) între cele două pahare, menținând echilibrul electric.\r\n        </Text>\r\n        \r\n        <Text style={styles.sectionHeader}>Calculul Vitezei Reacției Electrolitice</Text>\r\n        <Text style={styles.text}>\r\n          Pentru producția de hidrogen la catod:{\"\\n\"}\r\n          Viteza = I / (2 · F) (mol/s){\"\\n\"}\r\n          Pentru producția de oxigen la anod:{\"\\n\"}\r\n          Viteza = I / (4 · F) (mol/s){\"\\n\"}\r\n          unde I este intensitatea curentului în amperi și F este constanta lui Faraday (~96485 C/mol).\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000,\r\n  },\r\n  content: {\r\n    width: '90%',\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  header: {\r\n    fontSize: 22,\r\n    color: '#007BFF',\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  sectionHeader: {\r\n    fontSize: 18,\r\n    color: '#007BFF',\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: '#333',\r\n    marginTop: 5,\r\n    lineHeight: 20,\r\n  },\r\n});\r\n\r\nexport default TheoreticalGuide;\r\n","\"use client\"\n\nimport React, { useState, useEffect, useRef } from \"react\"\nimport { View, Text, Button, StyleSheet, Dimensions, ScrollView, SafeAreaView } from \"react-native\"\nimport Slider from \"@react-native-community/slider\"\nimport { LineChart } from \"react-native-chart-kit\"\nimport { Svg, Rect, Circle, Line, Text as SvgText, Polygon } from \"react-native-svg\"\nimport TheoreticalGuide from \"./TheoreticalGuide\"\n\ninterface Bubble {\n  id: number\n  x: number\n  y: number\n  size: number\n  opacity: number\n  type: \"hydrogen\" | \"oxygen\"\n}\n\ninterface Ion {\n  id: number\n  x: number\n  y: number\n  type: \"H+\" | \"OH⁻\"\n  vx: number\n  vy: number\n}\n\ninterface ExperimentationScreenProps {\n  onBack: () => void\n}\n\n// FloatingBubble component: animates upward and fades out.\nconst FloatingBubble: React.FC<{ x: number; y: number; size: number; opacity: number; }> = ({ x, y, size, opacity }) => {\n  return (\n    <Circle\n      cx={x}\n      cy={y}\n      r={size}\n      fill=\"#87ceeb\" // Assuming blue for H2 bubbles\n      opacity={opacity}\n    />\n  )\n}\n\nconst ExperimentationScreen: React.FC<ExperimentationScreenProps> = ({ onBack }) => {\n  const [voltage, setVoltage] = useState<number>(5)\n  const [current, setCurrent] = useState<number>(0.5)\n  const [bubbles, setBubbles] = useState<Bubble[]>([])\n  const [ions, setIons] = useState<Ion[]>([])\n  const [isRunning, setIsRunning] = useState<boolean>(false)\n  const [showGuide, setShowGuide] = useState<boolean>(false)\n\n  // Data tracking for the graph.\n  const [time, setTime] = useState<number>(0)\n  const [hydrogenData, setHydrogenData] = useState<number[]>([])\n  const [oxygenData, setOxygenData] = useState<number[]>([])\n\n  const productionFactor = 10\n  const faraday = 96485\n  const gasConstant = 0.0821 // L·atm/(mol·K)\n  const temperature = 298 // K (25°C)\n  const pressure = 1 // atm\n\n  // Initialize ions (only H+ and OH-)\n  useEffect(() => {\n    const initialIons: Ion[] = []\n    const ionTypes: Ion[\"type\"][] = [\"H+\", \"OH⁻\"]\n\n    // Adjust coordinates (x, y) and the number of ions as needed for your layout\n    // These coordinates are within the SVG viewBox (0 0 400 400), specifically within the container rect (x=\"70\" y=\"100\" width=\"260\" height=\"200\")\n    const containerSVG_X = 70\n    const containerSVG_Y = 100\n    const containerSVG_Width = 260\n    const containerSVG_Height = 200\n\n    for (let i = 0; i < 60; i++) { // Increased ion count for more movement\n      initialIons.push({\n        id: i,\n        x: containerSVG_X + Math.random() * containerSVG_Width,\n        y: containerSVG_Y + Math.random() * containerSVG_Height,\n        type: ionTypes[Math.floor(Math.random() * ionTypes.length)],\n        vx: (Math.random() - 0.5) * 0.8, // Adjusted speed\n        vy: (Math.random() - 0.5) * 0.8, // Adjusted speed\n      })\n    }\n    setIons(initialIons)\n  }, []) // Empty dependency array to run only once on mount\n\n  // Calculate gas production rate in mL/s\n  const calculateGasRate = (current: number, moles: number) => {\n    const volume = (moles * gasConstant * temperature) / pressure\n    return volume * 1000 // Convert to mL\n  }\n\n  // Animation loop for electrolysis simulation\n  useEffect(() => {\n    // Link isRunning to voltage/current state if you want it to run based on simulation parameters\n    if (voltage <= 1 || current <= 0.1) { // Example condition to stop simulation\n      setIsRunning(false)\n      return\n    }\n    setIsRunning(true) // Example: start simulation when voltage/current are sufficient\n\n    if (!isRunning) {\n      clearInterval(interval) // Clear interval if not running\n      return\n    }\n\n    const interval = setInterval(() => {\n      // Update bubbles (adapt coordinates and generation logic based on your bubble implementation)\n      setBubbles((prev) => {\n        const updated = prev\n          .map((bubble) => ({\n            ...bubble,\n            y: bubble.y - (0.5 * (voltage / 5)), // Bubbles rise faster with higher voltage\n            opacity: bubble.opacity - 0.01, // Fade out slower\n          }))\n          .filter((bubble) => bubble.y > 80 && bubble.opacity > 0) // Remove bubbles when they reach the top or fade out\n\n        // Add new hydrogen bubbles (from left electrode - Cathode, x=80)\n        if (isRunning && Math.random() < (0.1 * (current / 1))) { // Generate more bubbles with higher current\n          updated.push({\n            id: Date.now() + Math.random(),\n            x: 80 + Math.random() * 20, // Near left electrode\n            y: 290, // Start from bottom of solution\n            size: 3 + Math.random() * 4 * (current / 5), // Larger bubbles with more current\n            opacity: 1,\n            type: \"hydrogen\",\n          })\n        }\n\n        // Add new oxygen bubbles (from right electrode - Anode, x=300)\n        if (isRunning && Math.random() < (0.07 * (current / 1))) { // Generate more bubbles with higher current\n          updated.push({\n            id: Date.now() + Math.random(),\n            x: 300 + Math.random() * 20, // Near right electrode\n            y: 290, // Start from bottom of solution\n            size: 2 + Math.random() * 3 * (current / 5), // Larger bubbles with more current\n            opacity: 1,\n            type: \"oxygen\",\n          })\n        }\n\n        return updated\n      })\n\n      // Update ion movement\n      setIons((prev) =>\n        prev.map((ion) => {\n          let newVx = ion.vx\n          let newVy = ion.vy\n\n          // Ion movement away from production electrode based on diagram arrows\n          // H+ produced at Anode (right electrode, x=300), moves left.\n          // OH- produced at Cathode (left electrode, x=80), moves right.\n          if (isRunning) {\n            if (ion.type === \"H+\") {\n              // Move H+ away from right electrode (x=300) -> force towards smaller x\n              newVx -= (ion.x - 300) * 0.00005 * (voltage / 5) // Strength influenced by voltage\n            } else if (ion.type === \"OH⁻\") {\n              // Move OH- away from left electrode (x=80) -> force towards larger x\n              newVx += (ion.x - 80) * 0.00005 * (voltage / 5) // Strength influenced by voltage\n            }\n          }\n\n          // Add random movement\n          newVx += (Math.random() - 0.5) * 0.2\n          newVy += (Math.random() - 0.5) * 0.2\n\n          const newX = ion.x + newVx\n          const newY = ion.y + newVy\n\n          // Boundary conditions - adjust based on your container's SVG coordinates\n          const containerSVG_X = 70\n          const containerSVG_Y = 100 // Top of container solution area\n          const containerSVG_Width = 260\n          const containerSVG_Height = 200 // Height of container solution area\n\n          if (newX < containerSVG_X || newX > containerSVG_X + containerSVG_Width) newVx *= -1\n          if (newY < containerSVG_Y || newY > containerSVG_Y + containerSVG_Height) newVy *= -1\n\n          // Simple repulsion from electrodes to prevent sticking (optional)\n          const electrodeLeft_X = 80\n          const electrodeRight_X = 300\n          const electrodeTop_Y = 100\n          const electrodeHeight = 140 // Example electrode height\n\n          if (newX > electrodeLeft_X && newX < electrodeLeft_X + 20 && newY > electrodeTop_Y && newY < electrodeTop_Y + electrodeHeight) {\n            newVx += (newX - (electrodeLeft_X + 10)) * 0.1\n            newVy += (newY - (electrodeTop_Y + 70)) * 0.1\n          }\n          if (newX > electrodeRight_X && newX < electrodeRight_X + 20 && newY > electrodeTop_Y && newY < electrodeTop_Y + electrodeHeight) {\n            newVx += (newX - (electrodeRight_X + 10)) * 0.1\n            newVy += (newY - (electrodeTop_Y + 70)) * 0.1\n          }\n\n          return {\n            ...ion,\n            x: Math.max(containerSVG_X, Math.min(containerSVG_X + containerSVG_Width, newX)),\n            y: Math.max(containerSVG_Y, Math.min(containerSVG_Y + containerSVG_Height, newY)),\n            vx: newVx * 0.95, // Add some drag\n            vy: newVy * 0.95, // Add some drag\n          }\n        }),\n      )\n\n      // Update time based on simulation interval\n      setTime(prev => prev + (50 / 1000)) // Add time in seconds\n\n    }, 50) // Interval time in ms\n\n    return () => clearInterval(interval)\n  }, [isRunning, voltage, current]) // Add relevant dependencies\n\n  useEffect(() => {\n    // Keep this effect to control isRunning based on voltage and current\n    if (voltage > 1 && current > 0.1) {\n      setIsRunning(true)\n    } else {\n      setIsRunning(false)\n    }\n  }, [voltage, current])\n\n  useEffect(() => {\n    const trackingInterval = setInterval(() => {\n      if (voltage > 1 && current > 0.1) {\n        const hydrogenRate = calculateGasRate(current, current / (2 * faraday))\n        const oxygenRate = calculateGasRate(current, current / (4 * faraday))\n        setHydrogenData((prev) => [...prev, (prev.slice(-1)[0] || 0) + hydrogenRate])\n        setOxygenData((prev) => [...prev, (prev.slice(-1)[0] || 0) + oxygenRate])\n        setTime((prev) => prev + 1)\n      }\n    }, 1000)\n    return () => clearInterval(trackingInterval)\n  }, [voltage, current])\n\n  const chartLabels = Array.from({ length: Math.max(10, time) }, (_, i) => (i + 1).toString()).slice(-10)\n  const chartHydrogenData = hydrogenData.length \n    ? [...Array(Math.max(0, 10 - hydrogenData.length)).fill(0), ...hydrogenData].slice(-10) \n    : [0]\n  const chartOxygenData = oxygenData.length \n    ? [...Array(Math.max(0, 10 - oxygenData.length)).fill(0), ...oxygenData].slice(-10) \n    : [0]\n\n  const totalHydrogen = hydrogenData.length ? hydrogenData[hydrogenData.length - 1] : 0\n  const totalOxygen = oxygenData.length ? oxygenData[oxygenData.length - 1] : 0\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <View style={styles.mainContainer}>\n        {/* LEFT PANE: Controls, Graphs, and Data */}\n        <View style={styles.leftPane}>\n          <ScrollView style={styles.leftScroll} contentContainerStyle={styles.leftContent}>\n            <View style={styles.headerBar}>\n              <Button title=\"Inapoi\" onPress={onBack} color=\"#007BFF\" />\n              <Text style={styles.headerTitle}>Experimentare</Text>\n              <Button title=\"GHID\" onPress={() => setShowGuide(true)} color=\"#007BFF\" />\n            </View>\n            <View style={styles.controls}>\n              <View style={styles.sliderContainer}>\n                <Text style={styles.controlLabel}>Tensiune: {voltage.toFixed(1)} V</Text>\n                <Slider\n                  style={styles.slider}\n                  minimumValue={1}\n                  maximumValue={12}\n                  step={0.1}\n                  value={voltage}\n                  onValueChange={setVoltage}\n                  minimumTrackTintColor=\"#007BFF\"\n                  maximumTrackTintColor=\"#ccc\"\n                  thumbTintColor=\"#009688\"\n                />\n              </View>\n              <View style={styles.sliderContainer}>\n                <Text style={styles.controlLabel}>Intensitate: {current.toFixed(1)} A</Text>\n                <Slider\n                  style={styles.slider}\n                  minimumValue={0.1}\n                  maximumValue={5}\n                  step={0.1}\n                  value={current}\n                  onValueChange={setCurrent}\n                  minimumTrackTintColor=\"#007BFF\"\n                  maximumTrackTintColor=\"#ccc\"\n                  thumbTintColor=\"#009688\"\n                />\n              </View>\n            </View>\n            <Text style={styles.graphTitle}>Viteza de Producție a Gazelor</Text>\n            <LineChart\n              data={{\n                labels: chartLabels,\n                datasets: [\n                  {\n                    data: chartHydrogenData,\n                    color: (opacity = 1) => `rgba(0, 123, 255, ${opacity})`,\n                    strokeWidth: 2,\n                  },\n                  {\n                    data: chartOxygenData,\n                    color: (opacity = 1) => `rgba(255, 193, 7, ${opacity})`,\n                    strokeWidth: 2,\n                  },\n                ],\n                legend: [\"Hidrogen\", \"Oxigen\"],\n              }}\n              width={Dimensions.get(\"window\").width * 0.55}\n              height={220}\n              chartConfig={{\n                backgroundColor: \"#E3F2FD\",\n                backgroundGradientFrom: \"#E3F2FD\",\n                backgroundGradientTo: \"#E3F2FD\",\n                decimalPlaces: 1,\n                color: (opacity = 1) => `rgba(0, 123, 255, ${opacity})`,\n                labelColor: (opacity = 1) => `rgba(51, 51, 51, ${opacity})`,\n                style: { borderRadius: 16 },\n                propsForDots: {\n                  r: \"3\",\n                  strokeWidth: \"1\",\n                  stroke: \"#007BFF\",\n                },\n                fillShadowGradientOpacity: 0.6,\n              }}\n              bezier\n              withInnerLines={true}\n              withOuterLines={true}\n              fromZero={true}\n              style={{\n                marginVertical: 8,\n                borderRadius: 16,\n                alignSelf: \"center\",\n              }}\n            />\n            <Text style={styles.axisCaption}>X: Timp (s) | Y: Producție cumulativă</Text>\n            <View style={styles.graphInfo}>\n              <Text style={styles.infoText}>Timp de simulare: {time} s</Text>\n              <Text style={styles.infoText}>\n                Tensiune: {voltage.toFixed(1)} V | Intensitate: {current.toFixed(1)} A\n              </Text>\n              <Text style={styles.infoText}>\n                Viteza de producere H₂: {calculateGasRate(current, current / (2 * faraday)).toFixed(2)} mL/s\n              </Text>\n              <Text style={styles.infoText}>\n                Viteza de producere O₂: {calculateGasRate(current, current / (4 * faraday)).toFixed(2)} mL/s\n              </Text>\n            </View>\n          </ScrollView>\n        </View>\n\n        {/* RIGHT PANE: Water Electrolysis Apparatus (SVG) */}\n        <View style={styles.rightPane}>\n          <Svg width=\"400\" height=\"400\" viewBox=\"0 0 400 400\" style={styles.apparatusSVG}>\n            {/* Accumulator */}\n            <Rect x=\"125\" y=\"40\" width=\"150\" height=\"40\" fill=\"#777\" rx=\"6\" ry=\"6\" />\n            <SvgText x=\"200\" y=\"65\" textAnchor=\"middle\" fontSize=\"12\" fontWeight=\"bold\" fill=\"#fff\">Acumulator</SvgText>\n\n            {/* Wires connecting Accumulator to Electrodes */}\n            {/* Red wire connects Accumulator (right side +) to Cathode (left electrode -) */}\n            <Line x1=\"200\" y1=\"80\" x2=\"100\" y2=\"100\" stroke=\"red\" strokeWidth=\"3\" /> {/* Adjusted coordinates */}\n            {/* Blue wire connects Accumulator (left side -) to Anode (right electrode +) */}\n            <Line x1=\"200\" y1=\"80\" x2=\"300\" y2=\"100\" stroke=\"blue\" strokeWidth=\"3\" /> {/* Adjusted coordinates */}\n\n            {/* Container (Beaker) with split background colors and border */}\n            <Rect x=\"70\" y=\"100\" width=\"260\" height=\"200\" fill=\"none\" stroke=\"#007BFF\" strokeWidth=\"2\" rx=\"10\" ry=\"10\" /> {/* Border */}\n            {/* Blue side */}\n            <Rect x=\"70\" y=\"100\" width=\"130\" height=\"200\" fill=\"#D6EAFF\" opacity=\"0.7\" />\n            {/* Pink side */}\n            <Rect x=\"200\" y=\"100\" width=\"130\" height=\"200\" fill=\"#FFE4E1\" opacity=\"0.7\" />\n\n            {/* Water molecule label */}\n            <SvgText x=\"200\" y=\"130\" textAnchor=\"middle\" fontSize=\"14\" fontWeight=\"bold\">\n              H₂O\n            </SvgText>\n\n            {/* Electrodes (C gray areas) */}\n            {/* Cathode (left, connected to red wire) */}\n            <Rect x=\"90\" y=\"150\" width=\"20\" height=\"100\" fill=\"#888888\" stroke=\"#555555\" strokeWidth=\"2\" /> {/* Adjusted position */}\n            <SvgText x=\"100\" y=\"210\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\" fill=\"#fff\">C</SvgText>\n\n            {/* Anode (right, connected to blue wire) */}\n            <Rect x=\"290\" y=\"150\" width=\"20\" height=\"100\" fill=\"#888888\" stroke=\"#555555\" strokeWidth=\"2\" /> {/* Adjusted position */}\n            <SvgText x=\"300\" y=\"210\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\" fill=\"#fff\">C</SvgText>\n\n            {/* Ions */}\n            {/* H+ ions (orange) produced at anode (right), move left */}\n            {/* OH- ions (pinkish) produced at cathode (left), move right */}\n            {ions.map((ion) => (\n              <React.Fragment key={ion.id}>\n                <Circle cx={ion.x} cy={ion.y} r=\"4\" fill={ion.type === \"H+\" ? \"#ff9800\" : \"#e1bee7\"} opacity=\"0.8\" />\n                {/* Optional: Ion labels */}\n                {/* <SvgText x={ion.x} y={ion.y + 1} textAnchor=\"middle\" fontSize=\"8\" fontWeight=\"bold\">{ion.type}</SvgText> */}\n              </React.Fragment>\n            ))}\n\n            {/* Gas bubbles */}\n            {/* Hydrogen bubbles (blue) from left electrode */}\n            {/* Oxygen bubbles (yellow) from right electrode */}\n            {bubbles.map((bubble) => (\n              <Circle\n                key={bubble.id}\n                cx={bubble.x}\n                cy={bubble.y}\n                r={bubble.size}\n                fill={bubble.type === \"hydrogen\" ? \"#87ceeb\" : \"#ffeb3b\"}\n                opacity={bubble.opacity}\n              />\n            ))}\n\n            {/* Gas labels */}\n            <SvgText x=\"115\" y=\"120\" textAnchor=\"middle\" fontSize=\"14\" fontWeight=\"bold\">\n              H₂(g)\n            </SvgText>\n            <SvgText x=\"285\" y=\"120\" textAnchor=\"middle\" fontSize=\"14\" fontWeight=\"bold\">\n              O₂(g)\n            </SvgText>\n\n            {/* Ion flow arrows (adjusted directions) */}\n            {isRunning && (\n              <>\n                {/* OH- (red) arrow: from left electrode, pointing right */}\n                <Line x1=\"100\" y1=\"270\" x2=\"150\" y2=\"270\" stroke=\"red\" strokeWidth=\"2\" markerEnd=\"url(#arrow)\" />\n                <Polygon points=\"150,270 145,265 145,275\" fill=\"red\" />\n\n                {/* H+ (blue) arrow: from right electrode, pointing left */}\n                <Line x1=\"300\" y1=\"270\" x2=\"250\" y2=\"270\" stroke=\"blue\" strokeWidth=\"2\" markerEnd=\"url(#arrow)\" />\n                <Polygon points=\"250,270 255,265 255,275\" fill=\"blue\" />\n\n                {/* Add text labels for arrows */}\n                <SvgText x=\"155\" y=\"275\" fontSize=\"10\" fill=\"red\">OH⁻</SvgText>\n                <SvgText x=\"245\" y=\"275\" textAnchor=\"end\" fontSize=\"10\" fill=\"blue\">H⁺</SvgText>\n              </>\n            )}\n\n            {/* Chemical equations */}\n            <SvgText x=\"150\" y=\"340\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\" fill=\"#e91e63\">\n              2H₂O + 2e⁻ → H₂(g) + 2OH⁻\n            </SvgText>\n            <SvgText x=\"150\" y=\"355\" textAnchor=\"middle\" fontSize=\"10\" fill=\"#e91e63\">\n              Reducere\n            </SvgText>\n\n            <SvgText x=\"250\" y=\"340\" textAnchor=\"middle\" fontSize=\"10\" fontWeight=\"bold\" fill=\"#2196f3\">\n              2H₂O → O₂(g) + 4H⁺ + 4e⁻\n            </SvgText>\n            <SvgText x=\"250\" y=\"355\" textAnchor=\"middle\" fontSize=\"10\" fill=\"#2196f3\">\n              Oxidare\n            </SvgText>\n          </Svg>\n        </View>\n      </View>\n      {showGuide && <TheoreticalGuide onClose={() => setShowGuide(false)} />}\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\",\n  },\n  mainContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    width: 1640,\n    height: 1024,\n    alignSelf: \"center\",\n  },\n  leftPane: {\n    flex: 3,\n    padding: 10,\n  },\n  leftScroll: {\n    flex: 1,\n  },\n  leftContent: {\n    paddingBottom: 40,\n  },\n  rightPane: {\n    flex: 2,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    paddingTop: 20,\n  },\n  headerBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 15,\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: \"#007BFF\",\n  },\n  controls: {\n    marginBottom: 20,\n  },\n  controlLabel: {\n    fontWeight: \"bold\",\n    marginBottom: 5,\n  },\n  sliderContainer: {\n    alignItems: \"center\",\n    marginVertical: 10,\n  },\n  slider: {\n    width: Dimensions.get(\"window\").width * 0.55,\n    height: 20,\n    marginBottom: 15,\n  },\n  circuitDiagram: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: 20,\n  },\n  battery: { // Keep this style if the circuit diagram is still used elsewhere\n    width: 120,\n    height: 50,\n    backgroundColor: \"#999\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#007BFF\",\n  },\n  batteryText: {\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n  batteryValue: {\n    marginTop: 5,\n  },\n  graphTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#007BFF\",\n    textAlign: \"center\",\n    marginBottom: 5,\n  },\n  axisCaption: {\n    fontSize: 12,\n    textAlign: \"center\",\n    color: \"#333\",\n    marginBottom: 10,\n  },\n  graphInfo: {\n    backgroundColor: \"#F0F8FF\",\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 20,\n  },\n  infoText: {\n    fontSize: 14,\n    textAlign: \"center\",\n    color: \"#333\",\n    marginVertical: 2,\n  },\n  apparatusSVG: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  screw: { /* ... */ },\n  leftScrew: { /* ... */ },\n  rightScrew: { /* ... */ },\n  screwText: { /* ... */ },\n  batteryArea: { /* ... */ },\n  batteryBlock: { /* ... */ },\n  batteryLabel: { /* ... */ },\n  redWire: { /* ... */ },\n  blueWire: { /* ... */ },\n  ion: { /* ... */ },\n  reactionsContainer: {\n    width: \"90%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 20,\n  },\n  reactionBox: {\n    flex: 1,\n    padding: 10,\n    borderRadius: 10,\n    marginHorizontal: 5,\n    alignItems: \"center\",\n  },\n  reactionText: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 3,\n  },\n  reactionName: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    color: \"#007BFF\",\n  },\n  bubble: { /* ... */ },\n})\n\nexport default ExperimentationScreen\n","import React from 'react';\r\nimport './App.css';\r\n\r\ninterface MissionsScreenProps {\r\n  onBack: () => void;\r\n}\r\n\r\nconst MissionsScreen: React.FC<MissionsScreenProps> = ({ onBack }) => {\r\n  return (\r\n    <div className=\"missions-screen\">\r\n      <div className=\"header-bar\">\r\n        <button onClick={onBack} className=\"back-button\">Back</button>\r\n        <h2>Missions</h2>\r\n      </div>\r\n      <div className=\"mission-cards\">\r\n        <div className=\"mission-card\">\r\n          <h3>Copper Refining</h3>\r\n          <p>Goal: Deposit Copper Metal</p>\r\n          <p>Progress: 60%</p>\r\n          <button>Start Mission ▶</button>\r\n        </div>\r\n        <div className=\"mission-card\">\r\n          <h3>Hydrogen Production</h3>\r\n          <p>Goal: Collect Hydrogen Gas</p>\r\n          <p>Progress: 40%</p>\r\n          <button>Start Mission ▶</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionsScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SplashScreen from './SplashScreen';\r\nimport HomeScreen from './HomeScreen';\r\nimport ExperimentationScreen from './ExperimentationScreen';\r\nimport MissionsScreen from './MissionsScreen';\r\nimport TheoreticalGuide from './TheoreticalGuide';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  // Screen states: \"splash\", \"home\", \"experiment\", \"missions\"\r\n  const [screen, setScreen] = useState<'splash' | 'home' | 'experiment' | 'missions'>('splash');\r\n  const [showGuide, setShowGuide] = useState(false);\r\n\r\n  // Automatically transition from splash to home after 3 seconds.\r\n  useEffect(() => {\r\n    if (screen === 'splash') {\r\n      const timer = setTimeout(() => {\r\n        setScreen('home');\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [screen]);\r\n\r\n  const renderScreen = () => {\r\n    switch (screen) {\r\n      case 'splash':\r\n        return <SplashScreen onGetStarted={() => setScreen('home')} />;\r\n      case 'home':\r\n        return <HomeScreen onSelectMode={(mode) => setScreen(mode)} />;\r\n      case 'experiment':\r\n        return (\r\n          <ExperimentationScreen\r\n            onBack={() => setScreen('home')}\r\n            onShowGuide={() => setShowGuide(true)}\r\n          />\r\n        );\r\n      case 'missions':\r\n        return <MissionsScreen onBack={() => setScreen('home')} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {renderScreen()}\r\n      {showGuide && <TheoreticalGuide onClose={() => setShowGuide(false)} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [938], () => (__webpack_require__(8051)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SplashScreen","onGetStarted","_jsx","className","children","_jsxs","onClick","HomeScreen","onSelectMode","styles","StyleSheet","create","modal","position","top","left","right","bottom","backgroundColor","justifyContent","alignItems","zIndex","content","width","padding","borderRadius","header","fontSize","color","fontWeight","marginBottom","textAlign","sectionHeader","marginTop","text","lineHeight","TheoreticalGuide","onClose","View","style","Button","title","onPress","Text","safeArea","flex","mainContainer","flexDirection","height","alignSelf","leftPane","leftScroll","leftContent","paddingBottom","rightPane","paddingTop","headerBar","headerTitle","controls","controlLabel","sliderContainer","marginVertical","slider","Dimensions","get","circuitDiagram","battery","borderWidth","borderColor","batteryText","batteryValue","graphTitle","axisCaption","graphInfo","infoText","apparatusSVG","screw","leftScrew","rightScrew","screwText","batteryArea","batteryBlock","batteryLabel","redWire","blueWire","ion","reactionsContainer","reactionBox","marginHorizontal","reactionText","reactionName","bubble","ExperimentationScreen","onBack","voltage","setVoltage","useState","current","setCurrent","bubbles","setBubbles","ions","setIons","isRunning","setIsRunning","showGuide","setShowGuide","time","setTime","hydrogenData","setHydrogenData","oxygenData","setOxygenData","useEffect","initialIons","ionTypes","i","push","id","x","Math","random","y","type","floor","length","vx","vy","calculateGasRate","moles","clearInterval","interval","setInterval","prev","updated","map","Object","assign","opacity","filter","Date","now","size","newVx","newVy","newX","newY","containerSVG_Y","containerSVG_X","electrodeTop_Y","electrodeLeft_X","electrodeRight_X","max","min","trackingInterval","hydrogenRate","oxygenRate","slice","chartLabels","Array","from","_","toString","chartHydrogenData","fill","chartOxygenData","SafeAreaView","ScrollView","contentContainerStyle","toFixed","Slider","minimumValue","maximumValue","step","value","onValueChange","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","LineChart","data","labels","datasets","strokeWidth","legend","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","r","stroke","fillShadowGradientOpacity","bezier","withInnerLines","withOuterLines","fromZero","Svg","viewBox","Rect","rx","ry","SvgText","textAnchor","Line","x1","y1","x2","y2","React","Circle","cx","cy","_Fragment","markerEnd","Polygon","points","MissionsScreen","App","screen","setScreen","timer","setTimeout","clearTimeout","renderScreen","mode","onShowGuide","registerRootComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}